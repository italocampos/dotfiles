#!/bin/sh

# A bash file to manage the personal Python environments


# Util variables and functions
export active_env="default"

activate() {
	source $workspaces/venv/$1/bin/activate
}

read -r -d '' help << EOT
NAME
       venv - runs some actions for Python dev envs

SYNOPSIS
       venv
       venv -a [ENV NAME]
       venv -d
       venv -s [ENV NAME]
       venv -r

DESCRIPTION
       Activate, deactivate and switch between the Python dev environment set at the $HOME/workspaces/venv path

OPTIONS
       -a, --activate
              Activate the provided Python dev env. This activates the current active env case no parameter is provided.

       -d, --deactivate
              Dactivate the current Python dev env.

       -s, --set-active
              Set a specific dev env as active env.

       -r, --reset
              Reset the dev env configuration in the system to default.

       -h, --help
              Show the help.
EOT


# Activities of the script
case $1 in
	'-a' | '--activate')
		if [[ $2 != '' ]]; then
			activate $2
		else
			activate $active_env
		fi
		;;

	'')
		activate $active_env
		;;
	
	'-s' | '--set-active')
		if [[ $2 != '' ]]; then
			if [[ -e $workspaces/venv/$2 ]]; then
				export active_env=$2
				activate $active_env
				echo "$2 set as the active dev env."
			else
				echo "The env named $2 doesn't exist. The active dev env was not changed."
			fi
		else
			echo "No env name provided. Create a dev env at the $workspaces/venv path and try again. Type venv -h to see the help."
		fi
		;;

	'-d' | '--deactivate')
		#cd $HOME
		deactivate
		;;

	'-r' | '--reset')
		venv -d
		cd $HOME
		export active_env="default"
		echo "venv set the environment configs to default."
		;;

	'-h' | '--help')
		echo "$help"
		;;

	*)
		echo 'Unknown option. Use venv -h to see the help.'
		;;
esac
